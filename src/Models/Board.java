package Models;

import java.util.Objects;

public class Board {

    public void SetBoard(Game game){
        init();
        editKitchen(game);
        editBoard(game.firstPlayerBoard);
        editBoard(game.secondPlayerBoard);
    }


    public void editBoard(String[][] playerBoard) {
        for (int i = 0; i < 19; i++) {
            for (int j = 0; j < 19; j++) {
                if (playerBoard[i][j].contains("*1")
                        || playerBoard[i][j].contains("*2")
                        || playerBoard[i][j].contains("*3")
                        || playerBoard[i][j].contains("*4")
                        || playerBoard[i][j].contains("#1")
                        || playerBoard[i][j].contains("#2")
                        || playerBoard[i][j].contains("#3")
                        || playerBoard[i][j].contains("#4")) {

                    if (board[i][j].equals("_")) {
                        board[i][j] = "";
                    }
                    board[i][j] += removeCellNumber(playerBoard[i][j]);
                }
            }
        }
    }

    public void editKitchen(Game game){
        //First Player
            for (int k=1;k<5;k++){
                if (game.getFirstStonesPositions()[k-1] == 84){
                    String stone ="*";
                    stone+=k;
                    outerloop:
                    for (int i = 0; i < 19; i++){
                        for (int j = 0; j < 19; j++){
                            if(Objects.equals(this.board[i][j], "O")){
                                this.board[i][j] = stone;
                                break outerloop;

                            }
                        }

                    }

                }
            }



      //Second PLayer
        for (int k=1;k<5;k++){
            if (game.getSecondStonesPositions()[k-1] == 84){
                String stone ="#";
                stone+=k;
                outerloop:
                for (int i = 0; i < 19; i++){
                    for (int j = 0; j < 19; j++){
                        if(Objects.equals(this.board[i][j], "O")){
                            this.board[i][j] = stone;
                            break outerloop;

                        }
                    }

                }

            }
        }


    }

    public String[][] getBoard() {
        return board;
    }

    public  String removeCellNumber(String input) {
        StringBuilder result = new StringBuilder();
        boolean symbolEncountered = false;

        for (char character : input.toCharArray()) {
            if (character == '*' || character == '#') {
                symbolEncountered = true;
            }

            if (symbolEncountered) {
                result.append(character);
            }
        }

        return result.toString();
    }

    public void init(){
        String[][] board = {
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "X", "_", "X", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {"_", "_", "X", "_", "_", "_", "_", "_", "O", "O", "O", "_", "_", "_", "_", "_", "X", "_", "_"},
                {"_", "_", "_", "_", "_", "_", "_", "_", "O", "O", "O", "_", "_", "_", "_", "_", "_", "_", "_"},
                {"_", "_", "X", "_", "_", "_", "_", "_", "O", "O", "O", "_", "_", "_", "_", "_", "X", "_", "_"},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "X", "_", "X", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
                {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "}
        };


        for(int i=0;i<19;i++)
            System.arraycopy(board[i], 0, this.board[i], 0, 19);
    }

    public String[][] board = {
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "X", "_", "X", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {"_", "_", "X", "_", "_", "_", "_", "_", "O", "O", "O", "_", "_", "_", "_", "_", "X", "_", "_"},
            {"_", "_", "_", "_", "_", "_", "_", "_", "O", "O", "O", "_", "_", "_", "_", "_", "_", "_", "_"},
            {"_", "_", "X", "_", "_", "_", "_", "_", "O", "O", "O", "_", "_", "_", "_", "_", "X", "_", "_"},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "X", "_", "X", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "},
            {" ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", " ", " ", " ", " ", " ", " ", " ", " "}
    };
}
